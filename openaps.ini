[device "vmax522"]
vendor = openaps.vendors.medtronic
extra = vmax522.ini

[device "vmaxdexhandheld"]
vendor = openaps.vendors.dexcom
extra = vmaxdexhandheld.ini

[report "last_four_pump_hours.json"]
device = vmax522
hours = 4.0
use = iter_pump_hours
reporter = JSON

[report "last_four_cgm_hours.json"]
device = vmaxdexhandheld
hours = 4.0
use = iter_glucose_hours
reporter = JSON

[alias]
last_four_hours = report invoke last_four_pump_hours.json last_four_cgm_hours.json
gather-profile = report invoke settings/settings.json settings/bg_targets_raw.json settings/insulin_sensitivities_raw.json settings/basal_profile.json settings/profile.json
monitor-pump = report invoke monitor/clock.json monitor/temp_basal.json monitor/pumphistory.json monitor/pumphistory-zoned.json monitor/clock-zoned.json monitor/battery.json monitor/reservoir.json monitor/status.json
monitor-cgm = report invoke monitor/glucose.json
loop = ! bash -c "openaps monitor-cgm 2>/dev/null && ( openaps preflight && openaps gather && openaps enact) || echo No CGM data."
retry-loop = ! bash -c "openaps preflight && until( ! mm-stick warmup || openaps loop); do sleep 5; done"
gather = ! bash -c "rm -f monitor/*; openaps gather-profile && openaps monitor-cgm && openaps monitor-pump && openaps report invoke monitor/iob.json"
preflight = ! bash -c "rm -f monitor/clock.json && openaps report invoke monitor/clock.json 2>/dev/null && grep -q T monitor/clock.json && echo PREFLIGHT OK || (mm-stick warmup || sudo oref0-reset-usb; echo PREFLIGHT FAIL; sleep 120; exit 1)"
invoke = report invoke
get-ns-glucose = report invoke monitor/ns-glucose.json
get-bg = ! bash -c "openaps monitor-cgm 2>/dev/null || ( openaps get-ns-glucose && grep -q glucose monitor/ns-glucose.json && mv monitor/ns-glucose.json monitor/glucose.json )"
wait-for-bg = ! bash -c "cp monitor/glucose.json monitor/last-glucose.json; while(diff -q monitor/last-glucose.json monitor/glucose.json); do echo -n .; sleep 10; openaps get-bg >/dev/null; done"
format-latest-nightscout-treatments = ! bash -c "nightscout cull-latest-openaps-treatments monitor/pumphistory-zoned.json settings/model.json $(openaps latest-ns-treatment-time) > upload/latest-treatments.json"
upload-recent-treatments = ! bash -c "openaps format-latest-nightscout-treatments && test $(json -f upload/latest-treatments.json -a created_at eventType | wc -l ) -gt 0 && (ns-upload https://vjdd.azurewebsites.net 0f620b6c525de461d31a9d21217aed1e25ea5656 treatments.json upload/latest-treatments.json ) || echo \"No recent treatments to upload\""
upload = ! bash -c "openaps preflight && ( openaps monitor-pump && openaps upload-recent-treatments && openaps get-settings) 2>/dev/null >/dev/null && echo -n \"Uploaded; most recent treatment event @ \" && openaps latest-ns-treatment-time || echo \"Error; could not upload\""
latest-ns-treatment-time = ! bash -c "nightscout latest-openaps-treatment https://vjdd.azurewebsites.net | json created_at"
get-settings = report invoke settings/model.json settings/bg_targets_raw.json settings/insulin_sensitivities_raw.json settings/basal_profile.json settings/settings.json
status-upload = ! bash -c "openaps report invoke monitor/upload-status.json && ns-upload $NIGHTSCOUT_HOST $API_SECRET devicestatus.json monitor/upload-status.json"

[device "oref0"]
vendor = openaps.vendors.process
extra = oref0.ini

[device "get-profile"]
vendor = openaps.vendors.process
extra = get-profile.ini

[device "calculate-iob"]
vendor = openaps.vendors.process
extra = calculate-iob.ini

[device "determine-basal"]
vendor = openaps.vendors.process
extra = determine-basal.ini

[report "settings/settings.json"]
device = vmax522
use = read_settings
reporter = JSON

[report "settings/bg_targets_raw.json"]
device = vmax522
use = read_bg_targets
reporter = JSON

[report "settings/insulin_sensitivities_raw.json"]
device = vmax522
use = read_insulin_sensitivities
reporter = JSON

[report "settings/basal_profile.json"]
device = vmax522
use = read_basal_profile_std
reporter = JSON

[report "settings/profile.json"]
use = shell
bg_targets = settings/bg_targets_raw.json
preferences = preferences.json
settings = settings/settings.json
basal_profile = settings/basal_profile.json
reporter = text
json_default = True
device = get-profile
remainder = 
insulin_sensitivities = settings/insulin_sensitivities_raw.json

[report "monitor/pumphistory.json"]
device = vmax522
hours = 4.0
use = iter_pump_hours
reporter = JSON

[report "monitor/clock.json"]
device = vmax522
use = read_clock
reporter = JSON

[report "monitor/iob.json"]
profile = settings/profile.json
use = shell
clock = monitor/clock.json
reporter = JSON
json_default = True
pumphistory = monitor/pumphistory.json
device = calculate-iob
remainder = 

[report "monitor/temp_basal.json"]
device = vmax522
use = read_temp_basal
reporter = JSON

[report "monitor/glucose.json"]
device = vmaxdexhandheld
count = 5
use = iter_glucose
reporter = JSON

[report "enact/suggested.json"]
profile = settings/profile.json
use = shell
temp_basal = monitor/temp_basal.json
reporter = text
json_default = True
device = determine-basal
remainder = 
iob = monitor/iob.json
glucose = monitor/glucose.json

[device "ns-status"]
vendor = openaps.vendors.process
extra = ns-status.ini

[report "monitor/upload-status.json"]
suggested = enact/suggested.json
status = monitor/status.json
use = shell
reservoir = monitor/reservoir.json
reporter = JSON
battery = monitor/battery.json
clock = monitor/clock-zoned.json
json_default = True
device = ns-status
remainder = 
iob = monitor/iob.json
enacted = enact/enacted.json

[vendor "openapscontrib.timezones"]
path = .
module = openapscontrib.timezones

[device "tz"]
vendor = openapscontrib.timezones
extra = tz.ini

[report "monitor/clock-zoned.json"]
use = clock
reporter = JSON
astimezone = False
date = None
adjust = missing
input = monitor/clock.json
device = tz
timezone = 

[report "monitor/pumphistory-zoned.json"]
use = rezone
reporter = JSON
astimezone = False
date = timestamp dateString start_at end_at created_at
adjust = missing
input = monitor/pumphistory.json
device = tz
timezone = 

[device "ns-glucose"]
vendor = openaps.vendors.process
extra = ns-glucose.ini

[device "iob"]
vendor = openaps.vendors.process
extra = iob.ini

[report "monitor/ns-glucose.json"]
device = ns-glucose
remainder = 
use = shell
json_default = True
reporter = text

[report "settings/model.json"]
device = vmax522
use = model
reporter = JSON

[report "monitor/reservoir.json"]
device = vmax522
use = reservoir
reporter = JSON

[device "ns"]
vendor = openaps.vendors.process
extra = ns.ini

[report "nightscout/recent-treatments.json"]
oper = format-recent-history-treatments
use = shell
reporter = JSON
json_default = True
device = ns
remainder = monitor/pump-history.json model.json

[report "monitor/battery.json"]
device = vmax522
use = read_battery_status
reporter = JSON

[report "monitor/status.json"]
device = vmax522
use = read_status
reporter = JSON

[report "enact/enacted.json"]
device = vmax522
input = enact/suggested.json
use = set_temp_basal
reporter = JSON

